name: CI

on:
  push:
    branches:
      - master
  release:
    types: [ published ]
  pull_request:
    branches:
      - '**'

env:
  PRIMARY_NODE_VERSION: 20.x
  PRIMARY_OS: ubuntu-latest
  REGISTRY: https://registry.npmjs.org/

jobs:
  test:
    name: CI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node-version: [ 20.x,  22.x ]

    steps:

      - name: Echo env variables
        run: |
          echo ref: ${{ github.event.client_payload.ref || github.ref }}
          echo sha: ${{ github.event.client_payload.sha || github.sha }}
          echo head ref: ${{ github.event.client_payload.head_ref || github.head_ref }}
          echo base ref: ${{ github.event.client_payload.base_ref || github.base_ref }}
          echo action: ${{ github.action }}
          echo event: ${{ github.event_name }}

      - uses: actions/checkout@v2
        name: Checkout
        with:
          ref: ${{ github.event.client_payload.ref || github.ref }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}


      - name: Install dependencies and build
        run: |
          npm ci
          npm run build

      # - name: Snyk security check
      #   if: matrix.node-version == env.PRIMARY_NODE_VERSION && matrix.os == env.PRIMARY_OS
      #   uses: snyk/actions/node@master
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # - name: Run unit tests with coverage
      #   if: matrix.node-version == env.PRIMARY_NODE_VERSION && matrix.os == env.PRIMARY_OS
      #   uses: paambaati/codeclimate-action@v2.7.5
      #   env:
      #     CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      #   with:
      #     coverageCommand: yarn test:cover

      - name: Run unit tests
        if: "!(matrix.node-version == env.PRIMARY_NODE_VERSION && matrix.os == env.PRIMARY_OS)"
        run: npm run test:unit

  publish_version:
    name: Publish
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node-version: [ 20.x ]
    needs: [ test ]
    
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: fetch
        run: |
          git fetch --prune --unshallow

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: ${{ env.REGISTRY }}


      - name: Install dependencies and build
        run: |
          npm ci
          npm run build

      - name: Publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.DEPLOY_TOKEN_GIT }}
          registry: ${{ env.REGISTRY }}
